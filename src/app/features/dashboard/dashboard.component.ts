import { Component, OnInit, signal, computed } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Router } from '@angular/router';
import { StorageService } from '../../core/services/storage.service';
import { DashboardStats, QuickAction, RecentActivity } from '../../core/models/userInterface';
import { HeaderComponent } from '../../shared/components/header/header.component';


@Component({
  selector: 'app-dashboard',
  imports: [CommonModule, HeaderComponent],
  templateUrl: './dashboard.component.html',
  styleUrls: ['./dashboard.component.scss'],
})
export class DashboardComponent implements OnInit {
  // Estado del usuario
  private user = signal<any>(null);

  // Datos computados
  userName = computed(() => this.user()?.name || 'Viajero Espiritual');

  // Estad√≠sticas del dashboard
  stats = signal<DashboardStats>({
    completedCourses: 3,
    totalCourses: 12,
    upcomingAppointments: 2,
    favoriteArticles: 8,
  });

  // Mensaje del d√≠a
  dailyQuote = signal<string>(
    'Las estrellas se alinean para traerte sabidur√≠a y claridad en tu camino.'
  );

  // Acciones r√°pidas
  quickActions = signal<QuickAction[]>([
    {
      title: 'Explorar Cursos',
      description: 'Descubre nuevos conocimientos esot√©ricos',
      icon: 'üìö',
      route: '/courses',
      color: 'rgba(52, 152, 219, 0.3)',
    },
    {
      title: 'Consultar Brujas',
      description: 'Agenda una sesi√≥n personalizada',
      icon: 'üîÆ',
      route: '/consultations',
      color: 'rgba(155, 89, 182, 0.3)',
    },
    {
      title: 'Leer Art√≠culos',
      description: 'Contenido espiritual y m√≠stico',
      icon: 'üìñ',
      route: '/content',
      color: 'rgba(46, 204, 113, 0.3)',
    },
    {
      title: 'Herramientas M√≠sticas',
      description: 'Tarot, runas y m√°s',
      icon: '‚ú®',
      route: '/tools',
      color: 'rgba(241, 196, 15, 0.3)',
    },
  ]);

  // Actividades recientes
  recentActivities = signal<RecentActivity[]>([
    {
      id: '1',
      type: 'course',
      title: 'Completaste: Introducci√≥n al Tarot',
      description: 'Has terminado todas las lecciones del curso b√°sico',
      date: new Date(Date.now() - 86400000), // Ayer
      icon: 'üéì',
    },
    {
      id: '2',
      type: 'tool',
      title: 'Lectura de Runas Realizada',
      description: 'Consultaste las runas sobre tu futuro profesional',
      date: new Date(Date.now() - 172800000), // Hace 2 d√≠as
      icon: '·ö±',
    },
    {
      id: '3',
      type: 'article',
      title: 'Art√≠culo Guardado',
      description: 'Agregaste "El Poder de los Cristales" a favoritos',
      date: new Date(Date.now() - 259200000), // Hace 3 d√≠as
      icon: '‚≠ê',
    },
  ]);

  constructor(private router: Router, private storageService: StorageService) {}

  ngOnInit(): void {
    this.loadUserData();
    this.loadDashboardData();
  }

  private loadUserData(): void {
    const userData = this.storageService.getUser();
    if (userData) {
      this.user.set(userData);
    }
  }

  private loadDashboardData(): void {
    // En una aplicaci√≥n real, aqu√≠ cargar√≠as datos del servidor
    // Por ahora usamos datos mock

    // Cargar progreso de cursos desde storage
    const progress = this.storageService.getUserPreferences();
    if (progress.stats) {
      this.stats.set(progress.stats);
    }

    // Generar frase del d√≠a basada en la fecha
    this.generateDailyQuote();
  }

  private generateDailyQuote(): void {
    const quotes = [
      'Las estrellas se alinean para traerte sabidur√≠a y claridad en tu camino.',
      'Tu intuici√≥n es tu mejor gu√≠a en este momento de tu vida.',
      'Las energ√≠as c√≥smicas favorecen tu crecimiento espiritual hoy.',
      'La luna ilumina nuevas oportunidades en tu horizonte.',
      'Los cristales amplifican tu energ√≠a positiva en este d√≠a especial.',
      'Las cartas del tarot revelan secretos importantes para tu futuro.',
      'Tu aura brilla con una luz especial que atrae la abundancia.',
      'Los ancestros te env√≠an mensajes de sabidur√≠a a trav√©s de las runas.',
    ];

    const today = new Date();
    const dayOfYear = Math.floor(
      (today.getTime() - new Date(today.getFullYear(), 0, 0).getTime()) /
        (1000 * 60 * 60 * 24)
    );
    const selectedQuote = quotes[dayOfYear % quotes.length];

    this.dailyQuote.set(selectedQuote);
  }

  navigateTo(route: string): void {
    this.router.navigate([route]).catch((err) => {
      console.error('Error navegando a:', route, err);
    });
  }

  formatDate(date: Date): string {
    const now = new Date();
    const diffInHours = Math.floor(
      (now.getTime() - date.getTime()) / (1000 * 60 * 60)
    );

    if (diffInHours < 1) {
      return 'Hace unos momentos';
    } else if (diffInHours < 24) {
      return `Hace ${diffInHours} hora${diffInHours > 1 ? 's' : ''}`;
    } else {
      const diffInDays = Math.floor(diffInHours / 24);
      return `Hace ${diffInDays} d√≠a${diffInDays > 1 ? 's' : ''}`;
    }
  }

  logout(): void {
    // Limpiar datos de autenticaci√≥n
    this.storageService.clearAuthData();

    // Redirigir al login
    this.router.navigate(['/auth/login']).catch((err) => {
      console.error('Error en logout:', err);
    });
  }
}
